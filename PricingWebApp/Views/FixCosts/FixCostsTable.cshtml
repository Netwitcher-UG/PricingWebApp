@model IEnumerable<FixCosts>
@{
    ViewData["Title"] = "Fix Cost Table";
}


<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">

                @if (Model.Any())
                {
                    <div class="card">

                        <div class="card-header">

                            <div class="w-50">
                                <a id="mybtn" data-toggle="modal" data-target="#addone" data-url="@Url.Action("_NewFixCost")"
                               class="" style="text-decoration: none;cursor: pointer;"><i class="bi bi-plus"></i> Add New Fix Cost</a>
                                @await Html.PartialAsync("_NewFixCost", new FixCosts())
                            </div>

                        </div>
                        <!-- /.card-header -->
                        <div class="card-body">
                            <table id="example1" class="table table-bordered table-striped " >
                                <thead>
                                    <tr>
                                        <th>Fix Cost Name</th>
                                        <th>monthly Cost</th>
                                        <th>Date of Update</th>
                                        <th>Edit</th>
                                        <th>Delete</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var fixcost in Model)
                                    {
                                        try
                                        {
                                            <tr>
                                                <td>
                                                    @fixcost.Title
                                                </td>
                                                <td>
                                                    @fixcost.MonthlyCost
                                                </td>
                                                <td>
                                                    @fixcost.LastUpdate.ToString("dd-MM-yyyy")
                                                </td>
                                                <td width="10%">
                                                    <a data-url='@Url.Action($"_EditFixCost/{fixcost.Id}")'
                                           id="edit+@fixcost.Id" data-toggle="modal"
                                           data-target='#EditOne-@fixcost.Id' class="btn btn-success text-center " onclick="KnowMyEditBoxID(this.id)"><i class="bi bi-eye"></i> Edit</a>
                                                    @await Html.PartialAsync("_EditFixCost", fixcost)
                                                </td>

                                                <td width="10%">
                                                    <a data-url='@Url.Action($"_DeleteFixCost/{fixcost.Id}")'
                                           id="delete+@fixcost.Id" data-toggle="modal"
                                           data-target='#DeleteOne-@fixcost.Id' class="btn btn-danger text-left"><i class="bi bi-trash"></i> Delete</a>
                                                    @await Html.PartialAsync("_DeleteFixCost", fixcost)
                                                </td>

                                            </tr>
                                        }
                                        catch (Exception ex)
                                        {
                                            <partial>@ex.Message</partial>
                                        }
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>Fix Cost Mame</th>
                                        <th>monthly Cost</th>
                                        <th>Date of Update</th>
                                        <th>Edit</th>
                                        <th>Delete</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        <!-- /.card-body -->
                    </div>

                }
                else
                {
                    <div class=" ">
                        <a id="mybtn" data-toggle="modal" data-target="#addone"
                       class="" style="text-decoration: none;cursor: pointer; "><i class="bi bi-plus"></i> Add New Fix Cost</a>
                        @await Html.PartialAsync("_NewFixCost", new FixCosts())
                        <p class="font-weight-bold text-center mt-5">No fix costs . Let's add a fix cost ...</p>
                    </div>
                }
                <!-- /.card -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div>
    <!-- /.container-fluid -->
</section>
<!-- /.content -->
<!-- Control Sidebar -->
<aside class="control-sidebar control-sidebar-dark">
    <!-- Control sidebar content goes here -->
</aside>

<script>
    var myEditID;
    var formE;
    var myfixcostname;
    var mycost;
    function KnowMyEditBoxID(x) {
        myEditID = x.slice(5);
        formE = document.querySelector('form[name="EditFixCost-' + myEditID + '"]');
        myfixcostname = formE.querySelector('input[name="Title"]').value;
        mycost = formE.querySelector('input[name="MonthlyCost"]').value;

    }
    function isEmptyFieldsEdit() {
        const titleInputE = formE.querySelector('input[name="Title"]');
        const monthlyCostInputE = formE.querySelector('input[name="MonthlyCost"]');
        const titleInputerrE = formE.querySelector('span[data-valmsg-for="Title"]');
        const monthlyCostInputerrE = formE.querySelector('span[data-valmsg-for="MonthlyCost"]');
        if (titleInputE.value == "") {
            titleInputerrE.textContent = "You must put a name for the cost!!";
            return false;
        } else {
            titleInputerrE.textContent = "";
            if (monthlyCostInputE.value == null || monthlyCostInputE.value == 0) {
                monthlyCostInputerrE.textContent = "You must put a cost!!";
                return false;
            } else {
                monthlyCostInputerrE.textContent = "";
                return true;
            }
        };
    }
    function clearAllErrMsgEdit() {
        const titleInputE = formE.querySelector('input[name="Title"]');
        const monthlyCostInputE = formE.querySelector('input[name="MonthlyCost"]');
        const titleInputerrE = formE.querySelector('span[data-valmsg-for="Title"]');
        const monthlyCostInputerrE = formE.querySelector('span[data-valmsg-for="MonthlyCost"]');
        titleInputE.value = myfixcostname;
        monthlyCostInputE.value = mycost;
        titleInputerrE.textContent = "";
        monthlyCostInputerrE.textContent = "";
    }
</script>

<!-- reopen popup NewFixCost -->
@if (ViewData["reopenPopupNew"] != null)
{
    <script type="text/javascript">
        const link = document.getElementById("mybtn");
        setTimeout(() => {
            link.click();
        }, 500);
    </script>
}
